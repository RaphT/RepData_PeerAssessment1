sapply(split(mtcars$mpg, mtcars$cyl), mean)
x =sapply(split(mtcars$mpg, mtcars$cyl), mean)
abs(x[1]-x[3])
abs(x[3]-x[1])
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
library(ggplot2)
library(plyr)
#Set up environment ####
#Clean up workspace
rm(list = ls(all = TRUE))
#Set up  working directory
setwd("C:\\Users\\rtornay\\Desktop\\DataScienceSpecialization\\RepData_PeerAssessment1")
#Load data
data <- read.csv(unz(".//activity.zip", "activity.csv"), header=T)
names(data)
class(data)
class(data$date)
?class
?classes
?strptime
strptime(as.character(data$date))
as.Date(data$date)
class(as.Date(data$date))
?transform
transform(data, date = as.Date(date))
transform(airquality, Ozone = -Ozone)
data = transform(data, date = as.Date(date))
hist(data$step)
ggplot(data, aes(x = step))+
geom_bar()
ggplot(data, aes(x = step, fill = step))+
geom_bar()
ggplot(data, aes(x = step))+
geom_histogram()
class(data)
ggplot(data, aes(x = step, y = date))+
geom_histogram()
ggplot(data, aes(x = step, y = date))+geom_point()
ggplot(data, aes(x = date, y = step))+geom_point()
class(data$step)
as.numeric(data$step)
?complete.cases
data2 = complete.cases(data)
ggplot(data2, aes(x = date, y = step))+geom_point()
class(data$step)
class(data$date)
data = transform(data, date = as.Date(date), step = as.numeric(step))
class(data$step)
data = transform(data, date = as.Date(date))
data$step = as.numeric(data$step)
data2 = complete.cases(data)
ggplot(data2, aes(x = date, y = step))+geom_point()
?read.csv
df <- read.csv(unz(".//activity.zip", "activity.csv"), header=T)
df = transform(df, date = as.Date(date))
df2 = complete.cases(df)
ggplot(df2, aes(x = date, y = step))+geom_point()
df$step = as.numeric(data$step)
df2 = complete.cases(df)
ggplot(df2, aes(x = date, y = step))+geom_point()
step
data$step
df2$step
df2
df2 = df[complete.cases(df),]
ggplot(df2, aes(x = date, y = step))+geom_point()
df <- read.csv(unz(".//activity.zip", "activity.csv"), header=T)
df = transform(df, date = as.Date(date))
df2 = df[complete.cases(df),]
ggplot(df2, aes(x = date, y = step))+geom_point()
df <- read.csv(unz(".//activity.zip", "activity.csv"), header=T)
#Transform "date" (factor) in date format
df = transform(df, date = as.Date(date))
df$step = as.numeric(data$step)
df2 = df[complete.cases(df),]
# Create histogram
ggplot(df2, aes(x = date, y = step))+geom_point()
class(df$interval)
names(df)
df <- read.csv(unz(".//activity.zip", "activity.csv"), header=T)
names(df) = transform(df, date = as.Date(date))
df2 = df[complete.cases(df),]
ggplot(df2, aes(x = date, y = steps))+geom_point()
class(df2$steps)
df2
names(df2)
?complete.cases
df2 = df[complete.cases(df),]
ggplot(df2, aes(x = date, y = steps))+geom_point()
names(df2)
names(df)
df <- read.csv(unz(".//activity.zip", "activity.csv"), header=T)
names(df)
df <- read.csv(unz(".//activity.zip", "activity.csv"), header=T)
df2 = df[complete.cases(df),]
ggplot(df2, aes(x = date, y = steps))+geom_point()
df = transform(df, date = as.Date(date))
df2 = df[complete.cases(df),]
# Create histogram
ggplot(df2, aes(x = date, y = steps))+geom_point()
ggplot(df2, aes(x = steps))+
geom_histogram()
ggplot(df2, aes(x = steps))+
geom_histogram()+geom_density(color = "blue")
?geom_histogram
ggplot(df2, aes(x = steps))+
geom_histogram(binwidth = 1)+geom_density(color = "blue")
max(data$steps)
max(df$steps)
max(df2$steps)
min(df2$steps)
ggplot(df2, aes(x = steps))+
geom_histogram(binwidth = 5)+geom_density(color = "blue")
sum = ddply(df2, .(date), function(x){sum(x$steps, na.rm = T)})
sum
names(sum)
ggplot(sum, aes(x = V1))+
geom_histogram()
library(ggplot2)
library(plyr)
#Set up environment ####
#Clean up workspace
rm(list = ls(all = TRUE))
#Set up  working directory
setwd("C:\\Users\\rtornay\\Desktop\\DataScienceSpecialization\\RepData_PeerAssessment1")
#Load data
df <- read.csv(unz(".//activity.zip", "activity.csv"), header=T)
#Transform "date" (factor) in date format
df = transform(df, date = as.Date(date))
df2 = df[complete.cases(df),]
ggplot(sum, aes(x = V1))+
geom_histogram()+geom_density(color = "blue")
sum = ddply(df2, .(date), function(x){sum(x$steps, na.rm = T)})
ggplot(sum, aes(x = V1))+
geom_histogram()+geom_density(color = "blue")
summaryData =ddply(df2, .(date), summarise,
total = sum(steps),
mean = mean(steps),
median = median(steps))
summaryData
names(summaryData)
ggplot(summaryData, aes(x = total))+
geom_histogram()+geom_density(color = "blue")
plot(df$steps)
plot(df$steps, lty = "l")
?plot
plot(df$steps, type = "l")
?na.spline
install.packages("zoo")
?na.spline
library(zoo)
?na.spline
z <- zoo(c(2, NA, 1, 4, 5, 2), c(1, 3, 4, 6, 7, 8))
na.approx(z)
na.approx(z, 1:6)
?smooth.spline
smoo <- with(df[!is.na(df$steps),],smooth.spline(intervals,steps))
smoo <- with(df[!is.na(df$steps),],smooth.spline(interval,steps))
result <- with(df,predict(smoo,interval[is.na(steps)]))
df[is.na(df$steps),] <- result
results
result
smoo
result <- with(df,predict(smoo,df$interval))
result
